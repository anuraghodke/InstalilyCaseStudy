{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png'; // Replace with the path to your logo image\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chats, setChats] = useState([]); // Start with an empty chat list\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partData, setPartData] = useState({});\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  useEffect(() => {\n    // Load partData.json\n    fetch('/partData.json').then(response => response.json()).then(data => setPartData(data)).catch(error => console.error('Error loading part data:', error));\n  }, []);\n  const handleNewChat = () => {\n    // If there's a current chat with messages, save it\n    if (selectedChat && selectedChat.messages && selectedChat.messages.length > 0) {\n      var _selectedChat$message, _selectedChat$message2;\n      const chatName = ((_selectedChat$message = selectedChat.messages[0]) === null || _selectedChat$message === void 0 ? void 0 : (_selectedChat$message2 = _selectedChat$message.text) === null || _selectedChat$message2 === void 0 ? void 0 : _selectedChat$message2.substring(0, 20)) || `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: selectedChat.messages,\n        category: 'this-week' // You can add logic to categorize by date if needed\n      };\n      setChats(prevChats => [...prevChats, newChatEntry]);\n    }\n\n    // Initialize a new chat\n    const newChat = {\n      title: 'New Chat',\n      messages: [],\n      category: 'this-week'\n    };\n    setSelectedChat(newChat);\n    setSelectedProduct(null);\n  };\n  const handleSelectChat = chat => {\n    setSelectedChat(chat);\n    setSelectedProduct(null);\n  };\n  const handleProductSelect = product => {\n    setSelectedProduct(product);\n  };\n  const toggleLanguage = lang => {\n    setLanguage(lang);\n    // Functionality for language toggle to be implemented later\n  };\n  const handleMessagesUpdate = updatedMessages => {\n    if (selectedChat) {\n      setSelectedChat({\n        ...selectedChat,\n        messages: updatedMessages\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"PartSelect Logo\",\n          className: \"logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'English' ? 'active' : '',\n          onClick: () => toggleLanguage('English'),\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'Spanish' ? 'active' : '',\n          onClick: () => toggleLanguage('Spanish'),\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChatStorage, {\n        chats: chats,\n        onSelectChat: handleSelectChat,\n        onNewChat: handleNewChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n        partData: partData,\n        onProductSelect: handleProductSelect,\n        selectedChat: selectedChat,\n        onMessagesUpdate: handleMessagesUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-sidebar\",\n        children: selectedProduct ? /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: selectedProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"Generated product items with purchase information will appear here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"saumesWspNJuqquzygL7FCTkHl0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatStorage","ChatWindow","ProductCard","logo","jsxDEV","_jsxDEV","App","_s","chats","setChats","selectedChat","setSelectedChat","language","setLanguage","partData","setPartData","selectedProduct","setSelectedProduct","fetch","then","response","json","data","catch","error","console","handleNewChat","messages","length","_selectedChat$message","_selectedChat$message2","chatName","text","substring","Date","toLocaleDateString","newChatEntry","title","category","prevChats","newChat","handleSelectChat","chat","handleProductSelect","product","toggleLanguage","lang","handleMessagesUpdate","updatedMessages","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelectChat","onNewChat","onProductSelect","onMessagesUpdate","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png'; // Replace with the path to your logo image\nimport './App.css';\n\nconst App = () => {\n  const [chats, setChats] = useState([]); // Start with an empty chat list\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partData, setPartData] = useState({});\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  useEffect(() => {\n    // Load partData.json\n    fetch('/partData.json')\n      .then(response => response.json())\n      .then(data => setPartData(data))\n      .catch(error => console.error('Error loading part data:', error));\n  }, []);\n\n  const handleNewChat = () => {\n    // If there's a current chat with messages, save it\n    if (selectedChat && selectedChat.messages && selectedChat.messages.length > 0) {\n      const chatName = selectedChat.messages[0]?.text?.substring(0, 20) || `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: selectedChat.messages,\n        category: 'this-week', // You can add logic to categorize by date if needed\n      };\n      setChats(prevChats => [...prevChats, newChatEntry]);\n    }\n\n    // Initialize a new chat\n    const newChat = {\n      title: 'New Chat',\n      messages: [],\n      category: 'this-week',\n    };\n    setSelectedChat(newChat);\n    setSelectedProduct(null);\n  };\n\n  const handleSelectChat = (chat) => {\n    setSelectedChat(chat);\n    setSelectedProduct(null);\n  };\n\n  const handleProductSelect = (product) => {\n    setSelectedProduct(product);\n  };\n\n  const toggleLanguage = (lang) => {\n    setLanguage(lang);\n    // Functionality for language toggle to be implemented later\n  };\n\n  const handleMessagesUpdate = (updatedMessages) => {\n    if (selectedChat) {\n      setSelectedChat({ ...selectedChat, messages: updatedMessages });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"top-bar\">\n        <div className=\"logo\">\n          <img src={logo} alt=\"PartSelect Logo\" className=\"logo-image\" />\n        </div>\n        <div className=\"language-toggle\">\n          <button\n            className={language === 'English' ? 'active' : ''}\n            onClick={() => toggleLanguage('English')}\n          >\n            English\n          </button>\n          <button\n            className={language === 'Spanish' ? 'active' : ''}\n            onClick={() => toggleLanguage('Spanish')}\n          >\n            Spanish\n          </button>\n        </div>\n      </div>\n      <div className=\"main-content\">\n        <ChatStorage\n          chats={chats}\n          onSelectChat={handleSelectChat}\n          onNewChat={handleNewChat}\n        />\n        <ChatWindow\n          partData={partData}\n          onProductSelect={handleProductSelect}\n          selectedChat={selectedChat}\n          onMessagesUpdate={handleMessagesUpdate}\n        />\n        <div className=\"product-sidebar\">\n          {selectedProduct ? (\n            <ProductCard product={selectedProduct} />\n          ) : (\n            <div className=\"placeholder\">\n              Generated product items with purchase information will appear here!\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}