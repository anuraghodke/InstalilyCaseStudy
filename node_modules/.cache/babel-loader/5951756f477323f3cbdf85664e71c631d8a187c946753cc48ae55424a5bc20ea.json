{"ast":null,"code":"import partData from '../partData.json';\nexport const getAIMessage = async conversation => {\n  const validPartNumbers = Object.keys(partData);\n  const systemMessage = {\n    role: \"system\",\n    content: `You are a helpful assistant for the PartSelect website. You answer ONLY questions related to Refrigerator and Dishwasher parts. You can help users:\n    - Find compatible parts (e.g., \"Is this part compatible with my model?\")\n    - Answer installation questions (e.g., \"How do I install a Refrigerator Door Shelf Bin?\")\n    - Troubleshoot common issues (e.g., \"My ice maker isn't working\")\n    - Help with order support (e.g., \"What's the status of my order?\")\n    \n    When responding, include the product name (e.g., \"Refrigerator Door Shelf Bin\") or part number (e.g., \"Part Number: PS11752778\") if relevant. \n    When mentioning parts, you MUST only use parts and their corresponding numbers from the following list: ${validPartNumbers.join(', ')}.\n    Do NOT generate or use random part numbers that are not in this list. If a part number is not in the list, do not mention a specific part number and instead suggest that the user contact support for assistance.\n\n    If the user asks anything outside this scope (e.g., oven parts), politely decline with: \"I'm sorry, I can only assist with Refrigerator and Dishwasher parts.\"`\n  };\n  const messages = [systemMessage, ...conversation];\n  try {\n    const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY;\n    const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"deepseek-chat\",\n        messages: messages,\n        temperature: 0.7,\n        max_tokens: 500\n      })\n    });\n    const data = await response.json();\n    const message = {\n      role: \"assistant\",\n      content: data.choices[0].message.content\n    };\n    return message;\n  } catch (error) {\n    console.error(\"DeepSeek API error:\", error);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the assistant right now.\"\n    };\n  }\n};","map":{"version":3,"names":["partData","getAIMessage","conversation","validPartNumbers","Object","keys","systemMessage","role","content","join","messages","apiKey","process","env","REACT_APP_DEEPSEEK_API_KEY","response","fetch","method","headers","body","JSON","stringify","model","temperature","max_tokens","data","json","message","choices","error","console"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/api/api.js"],"sourcesContent":["import partData from '../partData.json';\nexport const getAIMessage = async (conversation) => {\n  const validPartNumbers = Object.keys(partData);\n  const systemMessage = {\n    role: \"system\",\n    content: `You are a helpful assistant for the PartSelect website. You answer ONLY questions related to Refrigerator and Dishwasher parts. You can help users:\n    - Find compatible parts (e.g., \"Is this part compatible with my model?\")\n    - Answer installation questions (e.g., \"How do I install a Refrigerator Door Shelf Bin?\")\n    - Troubleshoot common issues (e.g., \"My ice maker isn't working\")\n    - Help with order support (e.g., \"What's the status of my order?\")\n    \n    When responding, include the product name (e.g., \"Refrigerator Door Shelf Bin\") or part number (e.g., \"Part Number: PS11752778\") if relevant. \n    When mentioning parts, you MUST only use parts and their corresponding numbers from the following list: ${validPartNumbers.join(', ')}.\n    Do NOT generate or use random part numbers that are not in this list. If a part number is not in the list, do not mention a specific part number and instead suggest that the user contact support for assistance.\n\n    If the user asks anything outside this scope (e.g., oven parts), politely decline with: \"I'm sorry, I can only assist with Refrigerator and Dishwasher parts.\"`\n  };\n\n  const messages = [systemMessage, ...conversation];\n\n  try {\n    const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY;\n    const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({\n        model: \"deepseek-chat\",\n        messages: messages,\n        temperature: 0.7,\n        max_tokens: 500,\n      }),\n    });\n\n    const data = await response.json();\n    const message = {\n      role: \"assistant\",\n      content: data.choices[0].message.content,\n    };\n\n    return message;\n  } catch (error) {\n    console.error(\"DeepSeek API error:\", error);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the assistant right now.\",\n    };\n  }\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,kBAAkB;AACvC,OAAO,MAAMC,YAAY,GAAG,MAAOC,YAAY,IAAK;EAClD,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAAC;EAC9C,MAAMM,aAAa,GAAG;IACpBC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,8GAA8GL,gBAAgB,CAACM,IAAI,CAAC,IAAI,CAAC;AACzI;AACA;AACA;EACE,CAAC;EAED,MAAMC,QAAQ,GAAG,CAACJ,aAAa,EAAE,GAAGJ,YAAY,CAAC;EAEjD,IAAI;IACF,MAAMS,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;MAC3EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUP,MAAM;MACnC,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,eAAe;QACtBZ,QAAQ,EAAEA,QAAQ;QAClBa,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;MACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAG;MACdpB,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEiB,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACD,OAAO,CAACnB;IACnC,CAAC;IAED,OAAOmB,OAAO;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO;MACLtB,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}