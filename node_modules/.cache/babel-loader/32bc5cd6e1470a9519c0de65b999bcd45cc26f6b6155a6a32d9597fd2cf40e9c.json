{"ast":null,"code":"export const getAIMessage = async userQuery => {\n  try {\n    const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY;\n    const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"deepseek-chat\",\n        messages: [{\n          role: \"system\",\n          content: `You are a helpful assistant for the PartSelect website. You answer ONLY questions related to refrigerator and dishwasher parts. You can help users:\n          - Find compatible parts\n          - Answer installation questions\n          - Troubleshoot common issues\n          - Help with order support\n          \n          If the user asks anything outside this scope, politely decline.`\n        }, {\n          role: \"user\",\n          content: userQuery\n        }],\n        temperature: 0.7,\n        max_tokens: 500\n      })\n    });\n    const data = await response.json();\n    const message = {\n      role: \"assistant\",\n      content: data.choices[0].message.content\n    };\n    return message;\n  } catch (error) {\n    console.error(\"DeepSeek API error:\", error);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the assistant right now.\"\n    };\n  }\n};","map":{"version":3,"names":["getAIMessage","userQuery","apiKey","process","env","REACT_APP_DEEPSEEK_API_KEY","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","data","json","message","choices","error","console"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/api/api.js"],"sourcesContent":["export const getAIMessage = async (userQuery) => {\n  try {\n    const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY;\n    const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({\n        model: \"deepseek-chat\",\n        messages: [\n          {\n            role: \"system\",\n            content: `You are a helpful assistant for the PartSelect website. You answer ONLY questions related to refrigerator and dishwasher parts. You can help users:\n          - Find compatible parts\n          - Answer installation questions\n          - Troubleshoot common issues\n          - Help with order support\n          \n          If the user asks anything outside this scope, politely decline.`\n          },\n          { role: \"user\", content: userQuery }\n        ],\n        temperature: 0.7,\n        max_tokens: 500\n      }),\n    });\n\n    const data = await response.json();\n    const message = {\n      role: \"assistant\",\n      content: data.choices[0].message.content,\n    };\n\n    return message;\n  } catch (error) {\n    console.error(\"DeepSeek API error:\", error);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the assistant right now.\",\n    };\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;MAC3EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUP,MAAM;MACnC,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,CACR;UACEC,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;QACU,CAAC,EACD;UAAED,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEf;QAAU,CAAC,CACrC;QACDgB,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;MACd,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;IAClC,MAAMC,OAAO,GAAG;MACdN,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEG,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACD,OAAO,CAACL;IACnC,CAAC;IAED,OAAOK,OAAO;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO;MACLR,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}