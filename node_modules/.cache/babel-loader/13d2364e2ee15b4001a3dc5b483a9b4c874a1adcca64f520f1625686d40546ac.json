{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  partData,\n  onProductSelect,\n  selectedChat\n}) => {\n  _s();\n  const [messages, setMessages] = useState(selectedChat ? selectedChat.messages : []);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (selectedChat) {\n      setMessages(selectedChat.messages);\n    } else {\n      setMessages([]);\n    }\n  }, [selectedChat]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    // Extract part numbers from the message (e.g., PS12364199)\n    const partNumberRegex = /PS\\d+/g;\n    const partNumbers = input.match(partNumberRegex) || [];\n    const validPartNumbers = partNumbers.filter(pn => partData[pn]);\n    if (validPartNumbers.length > 0) {\n      const botMessage = {\n        text: 'Here are the parts I found:',\n        sender: 'bot',\n        partNumbers: validPartNumbers\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Select the first product to display in the sidebar\n      const firstProduct = partData[validPartNumbers[0]];\n      onProductSelect(firstProduct);\n    } else {\n      const botMessage = {\n        text: 'I couldn’t find any parts matching that number. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  const handleRegenerate = () => {\n    // Placeholder for regenerate functionality\n    const botMessage = {\n      text: 'Regenerating response...',\n      sender: 'bot'\n    };\n    setMessages([...messages, botMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sparkles\",\n          children: \"\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ask our Bot anything\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bot-label\",\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [message.text, message.partNumbers && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"part-numbers\",\n            children: message.partNumbers.map((partNumber, idx) => {\n              const product = partData[partNumber];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-link\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onProductSelect(product),\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 27\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Make response shorter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Explain it simpler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Tell me more about this part\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), messages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regenerate-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegenerate,\n        children: \"\\u27F3 Regenerate response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"order-support-btn\",\n        children: \"\\u2728 Order Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"My next question goes here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"JFF0Q6cdh51/vPEyWJetayrl50w=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatWindow","partData","onProductSelect","selectedChat","_s","messages","setMessages","input","setInput","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","text","sender","partNumberRegex","partNumbers","match","validPartNumbers","filter","pn","length","botMessage","prev","firstProduct","handleKeyPress","e","key","handleRegenerate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","partNumber","idx","product","onClick","name","ref","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatWindow.css';\n\nconst ChatWindow = ({ partData, onProductSelect, selectedChat }) => {\n  const [messages, setMessages] = useState(selectedChat ? selectedChat.messages : []);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (selectedChat) {\n      setMessages(selectedChat.messages);\n    } else {\n      setMessages([]);\n    }\n  }, [selectedChat]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: 'user' };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    // Extract part numbers from the message (e.g., PS12364199)\n    const partNumberRegex = /PS\\d+/g;\n    const partNumbers = input.match(partNumberRegex) || [];\n    const validPartNumbers = partNumbers.filter(pn => partData[pn]);\n\n    if (validPartNumbers.length > 0) {\n      const botMessage = {\n        text: 'Here are the parts I found:',\n        sender: 'bot',\n        partNumbers: validPartNumbers,\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Select the first product to display in the sidebar\n      const firstProduct = partData[validPartNumbers[0]];\n      onProductSelect(firstProduct);\n    } else {\n      const botMessage = {\n        text: 'I couldn’t find any parts matching that number. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        sender: 'bot',\n      };\n      setMessages(prev => [...prev, botMessage]);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  const handleRegenerate = () => {\n    // Placeholder for regenerate functionality\n    const botMessage = { text: 'Regenerating response...', sender: 'bot' };\n    setMessages([...messages, botMessage]);\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-messages\">\n        {messages.length === 0 ? (\n          <div className=\"welcome-message\">\n            <div className=\"sparkles\">✨</div>\n            <h2>Ask our Bot anything</h2>\n          </div>\n        ) : (\n          messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              {message.sender === 'bot' && <span className=\"bot-label\">A</span>}\n              <div className=\"message-content\">\n                {message.text}\n                {message.partNumbers && (\n                  <div className=\"part-numbers\">\n                    {message.partNumbers.map((partNumber, idx) => {\n                      const product = partData[partNumber];\n                      return (\n                        <div key={idx} className=\"product-link\">\n                          <button onClick={() => onProductSelect(product)}>\n                            {product.name}\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n              {message.sender === 'bot' && (\n                <div className=\"message-actions\">\n                  <button>Make response shorter</button>\n                  <button>Explain it simpler</button>\n                  <button>Tell me more about this part</button>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      {messages.length > 0 && (\n        <div className=\"regenerate-btn\">\n          <button onClick={handleRegenerate}>⟳ Regenerate response</button>\n        </div>\n      )}\n      <div className=\"chat-input\">\n        <button className=\"order-support-btn\">✨ Order Support</button>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"My next question goes here\"\n        />\n        <button onClick={handleSendMessage}>➤</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}