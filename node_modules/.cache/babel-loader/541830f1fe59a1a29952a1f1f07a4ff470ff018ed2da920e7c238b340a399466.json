{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png';\nimport partData from './partData.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partDataState, setPartData] = useState({});\n  const [selectedProduct, setSelectedProduct] = useState(null); // Add missing state\n\n  useEffect(() => {\n    console.log('Loaded partData:', partData); // Debug log\n    setPartData(partData);\n  }, []);\n  const handleNewChat = () => {\n    if (selectedChat && selectedChat.messages && selectedChat.messages.length > 0) {\n      var _selectedChat$message, _selectedChat$message2;\n      const chatName = ((_selectedChat$message = selectedChat.messages[0]) === null || _selectedChat$message === void 0 ? void 0 : (_selectedChat$message2 = _selectedChat$message.text) === null || _selectedChat$message2 === void 0 ? void 0 : _selectedChat$message2.substring(0, 20)) || `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: selectedChat.messages,\n        category: 'this-week'\n      };\n      setChats(prevChats => [...prevChats, newChatEntry]);\n    }\n    const newChat = {\n      title: 'New Chat',\n      messages: [],\n      category: 'this-week'\n    };\n    setSelectedChat(newChat);\n    setSelectedProduct(null); // Reset selected product\n  };\n  const handleSelectChat = chat => {\n    setSelectedChat(chat);\n    setSelectedProduct(null); // Reset selected product\n  };\n  const handleProductSelect = product => {\n    setSelectedProduct(product); // Update selected product\n  };\n  const toggleLanguage = lang => {\n    setLanguage(lang);\n  };\n  const handleMessagesUpdate = updatedMessages => {\n    if (selectedChat) {\n      setSelectedChat({\n        ...selectedChat,\n        messages: updatedMessages\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"PartSelect Logo\",\n          className: \"logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tagline\",\n          children: \"Here to help since 1999\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'English' ? 'active' : '',\n          onClick: () => toggleLanguage('English'),\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'Spanish' ? 'active' : '',\n          onClick: () => toggleLanguage('Spanish'),\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChatStorage, {\n        chats: chats,\n        onSelectChat: handleSelectChat,\n        onNewChat: handleNewChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n        partData: partDataState,\n        onProductSelect: handleProductSelect,\n        selectedChat: selectedChat,\n        onMessagesUpdate: handleMessagesUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-sidebar\",\n        children: selectedProduct ? /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: selectedProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"Generated product items with purchase information will appear here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jr/kMEqde8n7yu4EC+f9j8vdBt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatStorage","ChatWindow","ProductCard","logo","partData","jsxDEV","_jsxDEV","App","_s","chats","setChats","selectedChat","setSelectedChat","language","setLanguage","partDataState","setPartData","selectedProduct","setSelectedProduct","console","log","handleNewChat","messages","length","_selectedChat$message","_selectedChat$message2","chatName","text","substring","Date","toLocaleDateString","newChatEntry","title","category","prevChats","newChat","handleSelectChat","chat","handleProductSelect","product","toggleLanguage","lang","handleMessagesUpdate","updatedMessages","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelectChat","onNewChat","onProductSelect","onMessagesUpdate","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png';\nimport partData from './partData.json'; \nimport './App.css';\n\nconst App = () => {\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partDataState, setPartData] = useState({});\n  const [selectedProduct, setSelectedProduct] = useState(null); // Add missing state\n\n  useEffect(() => {\n    console.log('Loaded partData:', partData); // Debug log\n    setPartData(partData);\n  }, []);\n\n  const handleNewChat = () => {\n    if (selectedChat && selectedChat.messages && selectedChat.messages.length > 0) {\n      const chatName = selectedChat.messages[0]?.text?.substring(0, 20) || `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: selectedChat.messages,\n        category: 'this-week',\n      };\n      setChats(prevChats => [...prevChats, newChatEntry]);\n    }\n\n    const newChat = {\n      title: 'New Chat',\n      messages: [],\n      category: 'this-week',\n    };\n    setSelectedChat(newChat);\n    setSelectedProduct(null); // Reset selected product\n  };\n\n  const handleSelectChat = (chat) => {\n    setSelectedChat(chat);\n    setSelectedProduct(null); // Reset selected product\n  };\n\n  const handleProductSelect = (product) => {\n    setSelectedProduct(product); // Update selected product\n  };\n\n  const toggleLanguage = (lang) => {\n    setLanguage(lang);\n  };\n\n  const handleMessagesUpdate = (updatedMessages) => {\n    if (selectedChat) {\n      setSelectedChat({ ...selectedChat, messages: updatedMessages });\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"top-bar\">\n        <div className=\"logo\">\n          <img src={logo} alt=\"PartSelect Logo\" className=\"logo-image\" />\n          <span className=\"tagline\">Here to help since 1999</span>\n        </div>\n        <div className=\"language-toggle\">\n          <button\n            className={language === 'English' ? 'active' : ''}\n            onClick={() => toggleLanguage('English')}\n          >\n            English\n          </button>\n          <button\n            className={language === 'Spanish' ? 'active' : ''}\n            onClick={() => toggleLanguage('Spanish')}\n          >\n            Spanish\n          </button>\n        </div>\n      </div>\n      <div className=\"main-content\">\n        <ChatStorage\n          chats={chats}\n          onSelectChat={handleSelectChat}\n          onNewChat={handleNewChat}\n        />\n        <ChatWindow\n          partData={partDataState}\n          onProductSelect={handleProductSelect}\n          selectedChat={selectedChat}\n          onMessagesUpdate={handleMessagesUpdate}\n        />\n        <div className=\"product-sidebar\">\n          {selectedProduct ? (\n            <ProductCard product={selectedProduct} />\n          ) : (\n            <div className=\"placeholder\">\n              Generated product items with purchase information will appear here!\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACiB,aAAa,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9DC,SAAS,CAAC,MAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEhB,QAAQ,CAAC,CAAC,CAAC;IAC3CY,WAAW,CAACZ,QAAQ,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIV,YAAY,IAAIA,YAAY,CAACW,QAAQ,IAAIX,YAAY,CAACW,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAC7E,MAAMC,QAAQ,GAAG,EAAAF,qBAAA,GAAAb,YAAY,CAACW,QAAQ,CAAC,CAAC,CAAC,cAAAE,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BG,IAAI,cAAAF,sBAAA,uBAA9BA,sBAAA,CAAgCG,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAI,QAAQ,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE;MAC9G,MAAMC,YAAY,GAAG;QACnBC,KAAK,EAAEN,QAAQ;QACfJ,QAAQ,EAAEX,YAAY,CAACW,QAAQ;QAC/BW,QAAQ,EAAE;MACZ,CAAC;MACDvB,QAAQ,CAACwB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEH,YAAY,CAAC,CAAC;IACrD;IAEA,MAAMI,OAAO,GAAG;MACdH,KAAK,EAAE,UAAU;MACjBV,QAAQ,EAAE,EAAE;MACZW,QAAQ,EAAE;IACZ,CAAC;IACDrB,eAAe,CAACuB,OAAO,CAAC;IACxBjB,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMkB,gBAAgB,GAAIC,IAAI,IAAK;IACjCzB,eAAe,CAACyB,IAAI,CAAC;IACrBnB,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMoB,mBAAmB,GAAIC,OAAO,IAAK;IACvCrB,kBAAkB,CAACqB,OAAO,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/B3B,WAAW,CAAC2B,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,oBAAoB,GAAIC,eAAe,IAAK;IAChD,IAAIhC,YAAY,EAAE;MAChBC,eAAe,CAAC;QAAE,GAAGD,YAAY;QAAEW,QAAQ,EAAEqB;MAAgB,CAAC,CAAC;IACjE;EACF,CAAC;EAED,oBACErC,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvC,OAAA;MAAKsC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBvC,OAAA;QAAKsC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBvC,OAAA;UAAKwC,GAAG,EAAE3C,IAAK;UAAC4C,GAAG,EAAC,iBAAiB;UAACH,SAAS,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/D7C,OAAA;UAAMsC,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAuB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN7C,OAAA;QAAKsC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BvC,OAAA;UACEsC,SAAS,EAAE/B,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;UAClDuC,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,SAAS,CAAE;UAAAK,QAAA,EAC1C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7C,OAAA;UACEsC,SAAS,EAAE/B,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;UAClDuC,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,SAAS,CAAE;UAAAK,QAAA,EAC1C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN7C,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvC,OAAA,CAACN,WAAW;QACVS,KAAK,EAAEA,KAAM;QACb4C,YAAY,EAAEjB,gBAAiB;QAC/BkB,SAAS,EAAEjC;MAAc;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF7C,OAAA,CAACL,UAAU;QACTG,QAAQ,EAAEW,aAAc;QACxBwC,eAAe,EAAEjB,mBAAoB;QACrC3B,YAAY,EAAEA,YAAa;QAC3B6C,gBAAgB,EAAEd;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACF7C,OAAA;QAAKsC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B5B,eAAe,gBACdX,OAAA,CAACJ,WAAW;UAACqC,OAAO,EAAEtB;QAAgB;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEzC7C,OAAA;UAAKsC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAE7B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAjGID,GAAG;AAAAkD,EAAA,GAAHlD,GAAG;AAmGT,eAAeA,GAAG;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}