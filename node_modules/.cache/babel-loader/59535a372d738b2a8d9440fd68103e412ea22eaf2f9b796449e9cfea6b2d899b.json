{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getAIMessage } from '../api/api';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  partData,\n  onProductSelect,\n  selectedChat,\n  onMessagesUpdate,\n  language,\n  shouldClear,\n  onChatCleared\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Sync messages with selectedChat or clear\n  useEffect(() => {\n    if (shouldClear) {\n      setMessages([]);\n      setInput('');\n      setIsTyping(false);\n      onChatCleared();\n    } else if (selectedChat) {\n      setMessages(selectedChat.messages || []);\n    } else {\n      setMessages([]); // Ensure empty when no chat is selected\n    }\n  }, [shouldClear, selectedChat, onChatCleared]);\n\n  // Scroll to bottom\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, isTyping]);\n\n  // Update parent state\n  useEffect(() => {\n    onMessagesUpdate(messages);\n  }, [messages, onMessagesUpdate]);\n\n  // Adjust textarea height\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n  }, [input]);\n  const parseMessageText = text => {\n    const lines = text.split('\\n');\n    return lines.map((line, lineIndex) => {\n      if (line.trim().startsWith('###')) {\n        const headingText = line.replace('###', '').trim();\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '10px 0',\n            fontWeight: 'bold'\n          },\n          children: parseInlineText(headingText)\n        }, lineIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this);\n      }\n      const linkRegex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+|#)\\)/g;\n      const parts = [];\n      let lastIndex = 0;\n      let match;\n      while ((match = linkRegex.exec(line)) !== null) {\n        const [fullMatch, linkText, url] = match;\n        const startIndex = match.index;\n        if (startIndex > lastIndex) {\n          parts.push(parseBoldText(line.slice(lastIndex, startIndex), `${lineIndex}-${lastIndex}`));\n        }\n        if (url === '#') {\n          parts.push(/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.partselect.com\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              color: '#2A3F44',\n              textDecoration: 'underline'\n            },\n            children: linkText\n          }, `${lineIndex}-${startIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this));\n        } else {\n          parts.push(/*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              color: '#2A3F44',\n              textDecoration: 'underline'\n            },\n            children: linkText\n          }, `${lineIndex}-${startIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this));\n        }\n        lastIndex = startIndex + fullMatch.length;\n      }\n      if (lastIndex < line.length) {\n        parts.push(parseBoldText(line.slice(lastIndex), `${lineIndex}-${lastIndex}`));\n      }\n      if (parts.length === 0) {\n        parts.push(parseBoldText(line, `${lineIndex}-0`));\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [parts, lineIndex < lines.length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 44\n        }, this)]\n      }, lineIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const parseInlineText = text => {\n    const parts = text.split(/(\\*\\*[^*]+\\*\\*)/g);\n    return parts.map((part, partIndex) => {\n      if (part.startsWith('**') && part.endsWith('**')) {\n        const boldText = part.slice(2, -2);\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: boldText\n        }, partIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 16\n        }, this);\n      }\n      return part;\n    });\n  };\n  const parseBoldText = (text, keyPrefix) => {\n    const parts = text.split(/(\\*\\*[^*]+\\*\\*)/g);\n    return parts.map((part, partIndex) => {\n      if (part.startsWith('**') && part.endsWith('**')) {\n        const boldText = part.slice(2, -2);\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: boldText\n        }, `${keyPrefix}-${partIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n      }\n      return part;\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n    const messageId = Date.now();\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      role: 'user',\n      content: input,\n      id: messageId\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n    try {\n      const partNumberRegex = /PS-?\\s?\\d+/gi;\n      const partNumbers = input.match(partNumberRegex) || [];\n      let matchingProducts = [];\n      let validPartNumbers = [];\n      if (partNumbers.length > 0) {\n        const normalizedPartNumbers = partNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n        validPartNumbers = normalizedPartNumbers.filter(pn => partData[pn]);\n        matchingProducts = validPartNumbers.map(pn => partData[pn]);\n      }\n      let apiMessages = messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      })).concat({\n        role: 'user',\n        content: input\n      });\n      if (matchingProducts.length > 0) {\n        const productTitles = matchingProducts.map(product => product.name).join(', ');\n        const contextMessage = {\n          role: 'system',\n          content: `The part is a ${productTitles}. Use this information to generate a relevant response to the user's message.`\n        };\n        apiMessages = [contextMessage, ...apiMessages];\n        onProductSelect(matchingProducts);\n      }\n      const apiResponse = await getAIMessage(apiMessages, language);\n      const apiPartNumbers = apiResponse.content.match(partNumberRegex) || [];\n      const normalizedApiPartNumbers = apiPartNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n      const validApiPartNumbers = normalizedApiPartNumbers.filter(pn => partData[pn]);\n      const apiProducts = validApiPartNumbers.map(pn => partData[pn]);\n      let botMessageText = apiResponse.content;\n      if (matchingProducts.length > 0) {\n        botMessageText = (language === 'English' ? 'Here are the parts I found, I have displayed them in the product card window on the right:\\n\\n' : 'Aquí están las piezas que encontré, las he mostrado en la ventana de tarjetas de productos a la derecha:\\n\\n') + botMessageText;\n      }\n      if (apiProducts.length > 0) {\n        onProductSelect(apiProducts);\n      }\n      const botMessage = {\n        text: botMessageText,\n        sender: 'bot',\n        role: 'assistant',\n        content: botMessageText,\n        partNumbers: [...validPartNumbers, ...validApiPartNumbers],\n        id: messageId + 1\n      };\n      setMessages(prev => [...prev.filter(m => m.id !== 'typing'), botMessage]);\n      setIsTyping(false);\n    } catch (error) {\n      console.error('Error fetching response from API:', error);\n      const botMessage = {\n        text: language === 'English' ? 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.' : 'Ocurrió un error al obtener la respuesta. Por favor, intenta de nuevo o contacta al soporte en ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        sender: 'bot',\n        role: 'assistant',\n        content: language === 'English' ? 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.' : 'Ocurrió un error al obtener la respuesta. Por favor, intenta de nuevo o contacta al soporte en ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        id: Date.now() + 1\n      };\n      setMessages(prev => [...prev.filter(m => m.id !== 'typing'), botMessage]);\n      setIsTyping(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 && !isTyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'English' ? '✨ Assistance for your appliance needs' : '✨ Asistencia para tus necesidades de electrodomésticos'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: parseMessageText(message.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this)\n      }, message.id || `${message.sender}-${Date.now()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        id: \"typing\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: language === 'English' ? 'Typing...' : 'Escribiendo...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, \"typing\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: language === 'English' ? 'Ask about your appliance needs' : 'Pregunte por sus necesidades de electrodomésticos',\n        className: \"chat-textarea\",\n        rows: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"J+VkXMBrFroTcwclFSSSXiDhhcA=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAIMessage","jsxDEV","_jsxDEV","ChatWindow","partData","onProductSelect","selectedChat","onMessagesUpdate","language","shouldClear","onChatCleared","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","messagesEndRef","textareaRef","_messagesEndRef$curre","current","scrollIntoView","behavior","textarea","style","height","scrollHeight","parseMessageText","text","lines","split","map","line","lineIndex","trim","startsWith","headingText","replace","margin","fontWeight","children","parseInlineText","fileName","_jsxFileName","lineNumber","columnNumber","linkRegex","parts","lastIndex","match","exec","fullMatch","linkText","url","startIndex","index","push","parseBoldText","slice","href","target","rel","color","textDecoration","length","Fragment","part","partIndex","endsWith","boldText","keyPrefix","handleSendMessage","messageId","Date","now","userMessage","sender","role","content","id","prev","partNumberRegex","partNumbers","matchingProducts","validPartNumbers","normalizedPartNumbers","pn","toUpperCase","filter","apiMessages","msg","concat","productTitles","product","name","join","contextMessage","apiResponse","apiPartNumbers","normalizedApiPartNumbers","validApiPartNumbers","apiProducts","botMessageText","botMessage","m","error","console","handleKeyPress","e","key","shiftKey","preventDefault","className","message","ref","value","onChange","onKeyDown","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { getAIMessage } from '../api/api'; \nimport './ChatWindow.css';\n\nconst ChatWindow = ({ partData, onProductSelect, selectedChat, onMessagesUpdate, language, shouldClear, onChatCleared }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Sync messages with selectedChat or clear\n  useEffect(() => {\n    if (shouldClear) {\n      setMessages([]);\n      setInput('');\n      setIsTyping(false);\n      onChatCleared();\n    } else if (selectedChat) {\n      setMessages(selectedChat.messages || []);\n    } else {\n      setMessages([]); // Ensure empty when no chat is selected\n    }\n  }, [shouldClear, selectedChat, onChatCleared]);\n\n  // Scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, isTyping]);\n\n  // Update parent state\n  useEffect(() => {\n    onMessagesUpdate(messages);\n  }, [messages, onMessagesUpdate]);\n\n  // Adjust textarea height\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n  }, [input]);\n\n  const parseMessageText = (text) => {\n    const lines = text.split('\\n');\n    return lines.map((line, lineIndex) => {\n      if (line.trim().startsWith('###')) {\n        const headingText = line.replace('###', '').trim();\n        return (\n          <h3 key={lineIndex} style={{ margin: '10px 0', fontWeight: 'bold' }}>\n            {parseInlineText(headingText)}\n          </h3>\n        );\n      }\n\n      const linkRegex = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s)]+|#)\\)/g;\n      const parts = [];\n      let lastIndex = 0;\n      let match;\n\n      while ((match = linkRegex.exec(line)) !== null) {\n        const [fullMatch, linkText, url] = match;\n        const startIndex = match.index;\n\n        if (startIndex > lastIndex) {\n          parts.push(parseBoldText(line.slice(lastIndex, startIndex), `${lineIndex}-${lastIndex}`));\n        }\n\n        if (url === '#') {\n          parts.push(\n            <a\n              key={`${lineIndex}-${startIndex}`}\n              href=\"https://www.partselect.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: '#2A3F44', textDecoration: 'underline' }}\n            >\n              {linkText}\n            </a>\n          );\n        } else {\n          parts.push(\n            <a\n              key={`${lineIndex}-${startIndex}`}\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: '#2A3F44', textDecoration: 'underline' }}\n            >\n              {linkText}\n            </a>\n          );\n        }\n\n        lastIndex = startIndex + fullMatch.length;\n      }\n\n      if (lastIndex < line.length) {\n        parts.push(parseBoldText(line.slice(lastIndex), `${lineIndex}-${lastIndex}`));\n      }\n\n      if (parts.length === 0) {\n        parts.push(parseBoldText(line, `${lineIndex}-0`));\n      }\n\n      return (\n        <React.Fragment key={lineIndex}>\n          {parts}\n          {lineIndex < lines.length - 1 && <br />}\n        </React.Fragment>\n      );\n    });\n  };\n\n  const parseInlineText = (text) => {\n    const parts = text.split(/(\\*\\*[^*]+\\*\\*)/g);\n    return parts.map((part, partIndex) => {\n      if (part.startsWith('**') && part.endsWith('**')) {\n        const boldText = part.slice(2, -2);\n        return <strong key={partIndex}>{boldText}</strong>;\n      }\n      return part;\n    });\n  };\n\n  const parseBoldText = (text, keyPrefix) => {\n    const parts = text.split(/(\\*\\*[^*]+\\*\\*)/g);\n    return parts.map((part, partIndex) => {\n      if (part.startsWith('**') && part.endsWith('**')) {\n        const boldText = part.slice(2, -2);\n        return <strong key={`${keyPrefix}-${partIndex}`}>{boldText}</strong>;\n      }\n      return part;\n    });\n  };\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    const messageId = Date.now();\n    const userMessage = { text: input, sender: 'user', role: 'user', content: input, id: messageId };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n\n    try {\n      const partNumberRegex = /PS-?\\s?\\d+/gi;\n      const partNumbers = input.match(partNumberRegex) || [];\n      let matchingProducts = [];\n      let validPartNumbers = [];\n\n      if (partNumbers.length > 0) {\n        const normalizedPartNumbers = partNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n        validPartNumbers = normalizedPartNumbers.filter(pn => partData[pn]);\n        matchingProducts = validPartNumbers.map(pn => partData[pn]);\n      }\n\n      let apiMessages = messages.map(msg => ({\n        role: msg.role,\n        content: msg.content,\n      })).concat({ role: 'user', content: input });\n\n      if (matchingProducts.length > 0) {\n        const productTitles = matchingProducts.map(product => product.name).join(', ');\n        const contextMessage = {\n          role: 'system',\n          content: `The part is a ${productTitles}. Use this information to generate a relevant response to the user's message.`,\n        };\n        apiMessages = [contextMessage, ...apiMessages];\n        onProductSelect(matchingProducts);\n      }\n\n      const apiResponse = await getAIMessage(apiMessages, language);\n      const apiPartNumbers = apiResponse.content.match(partNumberRegex) || [];\n      const normalizedApiPartNumbers = apiPartNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n      const validApiPartNumbers = normalizedApiPartNumbers.filter(pn => partData[pn]);\n      const apiProducts = validApiPartNumbers.map(pn => partData[pn]);\n\n      let botMessageText = apiResponse.content;\n      if (matchingProducts.length > 0) {\n        botMessageText = (language === 'English'\n          ? 'Here are the parts I found, I have displayed them in the product card window on the right:\\n\\n'\n          : 'Aquí están las piezas que encontré, las he mostrado en la ventana de tarjetas de productos a la derecha:\\n\\n') + botMessageText;\n      }\n      if (apiProducts.length > 0) {\n        onProductSelect(apiProducts);\n      }\n\n      const botMessage = {\n        text: botMessageText,\n        sender: 'bot',\n        role: 'assistant',\n        content: botMessageText,\n        partNumbers: [...validPartNumbers, ...validApiPartNumbers],\n        id: messageId + 1,\n      };\n      setMessages(prev => [...prev.filter(m => m.id !== 'typing'), botMessage]);\n      setIsTyping(false);\n    } catch (error) {\n      console.error('Error fetching response from API:', error);\n      const botMessage = {\n        text: language === 'English'\n          ? 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.'\n          : 'Ocurrió un error al obtener la respuesta. Por favor, intenta de nuevo o contacta al soporte en ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        sender: 'bot',\n        role: 'assistant',\n        content: language === 'English'\n          ? 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.'\n          : 'Ocurrió un error al obtener la respuesta. Por favor, intenta de nuevo o contacta al soporte en ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        id: Date.now() + 1,\n      };\n      setMessages(prev => [...prev.filter(m => m.id !== 'typing'), botMessage]);\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-messages\">\n        {messages.length === 0 && !isTyping ? (\n          <div className=\"welcome-message\">\n            <h2>\n              {language === 'English'\n                ? '✨ Assistance for your appliance needs'\n                : '✨ Asistencia para tus necesidades de electrodomésticos'}\n            </h2>\n          </div>\n        ) : (\n          messages.map((message) => (\n            <div key={message.id || `${message.sender}-${Date.now()}`} className={`message ${message.sender}`}>\n              <div className=\"message-content\">\n                {parseMessageText(message.text)}\n              </div>\n            </div>\n          ))\n        )}\n        {isTyping && (\n          <div key=\"typing\" className=\"message bot\" id=\"typing\">\n            <div className=\"message-content typing\">\n              {language === 'English' ? 'Typing...' : 'Escribiendo...'}\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"chat-input\">\n        <textarea\n          ref={textareaRef}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={handleKeyPress}\n          placeholder={\n            language === 'English'\n              ? 'Ask about your appliance needs'\n              : 'Pregunte por sus necesidades de electrodomésticos'\n          }\n          className=\"chat-textarea\"\n          rows=\"1\"\n        />\n        <button onClick={handleSendMessage}>➤</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}