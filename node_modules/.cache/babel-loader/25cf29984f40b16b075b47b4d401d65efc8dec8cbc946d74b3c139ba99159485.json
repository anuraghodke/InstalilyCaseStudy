{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatWindow.css'; // Assuming a CSS file for styling\nimport partData from './partData.json'; // Import the JSON file containing part numbers and details\nimport { marked } from 'marked'; // For rendering markdown in messages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: 'Hello! How can I assist you with parts today?'\n  }]);\n\n  // Function to render each message\n  const renderMessage = (message, index) => {\n    // Extract all part numbers mentioned in the message\n    const partNumberRegex = /Part Number: (\\w+)/g;\n    const mentionedPartNumbers = [];\n    let match;\n    while ((match = partNumberRegex.exec(message.content)) !== null) {\n      mentionedPartNumbers.push(match[1].toUpperCase());\n    }\n\n    // Identify invalid part numbers (those not in partData)\n    const invalidPartNumbers = mentionedPartNumbers.filter(pn => !partData.hasOwnProperty(pn));\n\n    // Check for a single part number or product name to display a product card\n    const partNumberMatch = message.content.match(/Part Number: (\\w+)/);\n    const productNames = Object.keys(partData).filter(key => !key.startsWith(\"PS\"));\n    const productNameMatch = productNames.find(name => message.content.includes(name));\n    const key = partNumberMatch ? partNumberMatch[1].toUpperCase() : productNameMatch;\n    const product = key ? partData[key] : null;\n\n    // Add a note if there are invalid part numbers\n    let additionalNote = '';\n    if (invalidPartNumbers.length > 0) {\n      additionalNote = `<p style=\"color: red;\">Note: The following part numbers are not available in our database: ${invalidPartNumbers.join(', ')}</p>`;\n    }\n\n    // Render message with product card if a valid product is found\n    if (product) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${message.role}-message-container`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role}-message`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\") + additionalNote\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addToCart(product),\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Render message without product card if no valid product is found\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${message.role}-message-container`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}-message`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\") + additionalNote\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Placeholder function for adding to cart (implement as needed)\n  const addToCart = product => {\n    console.log(`Added ${product.name} to cart`);\n    // Add your cart logic here\n  };\n\n  // Placeholder function for handling user input (e.g., sending a message)\n  const handleSendMessage = userMessage => {\n    const newMessages = [...messages, {\n      role: 'user',\n      content: userMessage\n    }, {\n      role: 'assistant',\n      content: `You mentioned: ${userMessage}. Let me assist you with part numbers.`\n    } // Simulate assistant response\n    ];\n    setMessages(newMessages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => renderMessage(message, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            handleSendMessage(e.target.value);\n            e.target.value = '';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"9b2fSz9pdOZ7d1pAQFcB0vXIodU=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","partData","marked","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","role","content","renderMessage","message","index","partNumberRegex","mentionedPartNumbers","match","exec","push","toUpperCase","invalidPartNumbers","filter","pn","hasOwnProperty","partNumberMatch","productNames","Object","keys","key","startsWith","productNameMatch","find","name","includes","product","additionalNote","length","join","className","children","dangerouslySetInnerHTML","__html","replace","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","price","onClick","addToCart","console","log","handleSendMessage","userMessage","newMessages","map","type","placeholder","onKeyPress","e","target","value","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatWindow.css'; // Assuming a CSS file for styling\nimport partData from './partData.json'; // Import the JSON file containing part numbers and details\nimport { marked } from 'marked'; // For rendering markdown in messages\n\nconst ChatWindow = () => {\n  const [messages, setMessages] = useState([\n    { role: 'assistant', content: 'Hello! How can I assist you with parts today?' }\n  ]);\n\n  // Function to render each message\n  const renderMessage = (message, index) => {\n    // Extract all part numbers mentioned in the message\n    const partNumberRegex = /Part Number: (\\w+)/g;\n    const mentionedPartNumbers = [];\n    let match;\n    while ((match = partNumberRegex.exec(message.content)) !== null) {\n      mentionedPartNumbers.push(match[1].toUpperCase());\n    }\n\n    // Identify invalid part numbers (those not in partData)\n    const invalidPartNumbers = mentionedPartNumbers.filter(pn => !partData.hasOwnProperty(pn));\n\n    // Check for a single part number or product name to display a product card\n    const partNumberMatch = message.content.match(/Part Number: (\\w+)/);\n    const productNames = Object.keys(partData).filter(key => !key.startsWith(\"PS\"));\n    const productNameMatch = productNames.find(name => message.content.includes(name));\n    const key = partNumberMatch ? partNumberMatch[1].toUpperCase() : productNameMatch;\n    const product = key ? partData[key] : null;\n\n    // Add a note if there are invalid part numbers\n    let additionalNote = '';\n    if (invalidPartNumbers.length > 0) {\n      additionalNote = `<p style=\"color: red;\">Note: The following part numbers are not available in our database: ${invalidPartNumbers.join(', ')}</p>`;\n    }\n\n    // Render message with product card if a valid product is found\n    if (product) {\n      return (\n        <div key={index} className={`${message.role}-message-container`}>\n          <div className={`message ${message.role}-message`}>\n            <div dangerouslySetInnerHTML={{ __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\") + additionalNote }} />\n          </div>\n          <div className=\"product-card\">\n            <img src={product.image} alt={product.name} />\n            <div>\n              <h3>{product.name}</h3>\n              <p>{product.price}</p>\n              <button onClick={() => addToCart(product)}>Add to Cart</button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // Render message without product card if no valid product is found\n    return (\n      <div key={index} className={`${message.role}-message-container`}>\n        <div className={`message ${message.role}-message`}>\n          <div dangerouslySetInnerHTML={{ __html: marked(message.content).replace(/<p>|<\\/p>/g, \"\") + additionalNote }} />\n        </div>\n      </div>\n    );\n  };\n\n  // Placeholder function for adding to cart (implement as needed)\n  const addToCart = (product) => {\n    console.log(`Added ${product.name} to cart`);\n    // Add your cart logic here\n  };\n\n  // Placeholder function for handling user input (e.g., sending a message)\n  const handleSendMessage = (userMessage) => {\n    const newMessages = [\n      ...messages,\n      { role: 'user', content: userMessage },\n      { role: 'assistant', content: `You mentioned: ${userMessage}. Let me assist you with part numbers.` } // Simulate assistant response\n    ];\n    setMessages(newMessages);\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"messages\">\n        {messages.map((message, index) => renderMessage(message, index))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              handleSendMessage(e.target.value);\n              e.target.value = '';\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}