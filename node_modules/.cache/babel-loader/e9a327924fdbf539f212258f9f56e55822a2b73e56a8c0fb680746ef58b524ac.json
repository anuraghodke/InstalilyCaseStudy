{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png';\nimport partData from './partData.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partDataState, setPartData] = useState({});\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [shouldClearChat, setShouldClearChat] = useState(false);\n  const [currentMessages, setCurrentMessages] = useState([]);\n  useEffect(() => {\n    console.log('Loaded partData:', partData);\n    setPartData(partData);\n  }, []);\n  const handleNewChat = useCallback(() => {\n    if (currentMessages.length > 0) {\n      var _currentMessages$;\n      const firstMessage = ((_currentMessages$ = currentMessages[0]) === null || _currentMessages$ === void 0 ? void 0 : _currentMessages$.text) || '';\n      const chatName = firstMessage.length > 0 ? firstMessage.substring(0, 20) + (firstMessage.length > 20 ? '...' : '') : `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: [...currentMessages],\n        createdAt: new Date().toISOString()\n      };\n      setChats(prevChats => [...prevChats, newChatEntry]);\n    }\n    setSelectedChat(null);\n    setSelectedProducts([]);\n    setShouldClearChat(true);\n  }, [currentMessages]);\n  const handleSelectChat = useCallback(chat => {\n    setShouldClearChat(true); // Clear the window first\n    setTimeout(() => {\n      // Small delay to ensure clearing happens before loading\n      setSelectedChat(chat);\n      setSelectedProducts([]);\n      setCurrentMessages((chat === null || chat === void 0 ? void 0 : chat.messages) || []);\n      setShouldClearChat(false);\n    }, 0);\n  }, []);\n  const handleProductSelect = useCallback(products => {\n    setSelectedProducts(products);\n  }, []);\n  const toggleLanguage = useCallback(lang => {\n    setLanguage(lang);\n  }, []);\n  const handleMessagesUpdate = useCallback(updatedMessages => {\n    setCurrentMessages(updatedMessages);\n    if (selectedChat) {\n      const updatedChat = {\n        ...selectedChat,\n        messages: [...updatedMessages]\n      };\n      setSelectedChat(updatedChat);\n      setChats(prev => prev.map(chat => chat.createdAt === selectedChat.createdAt ? updatedChat : {\n        ...chat\n      }));\n    }\n  }, [selectedChat]);\n  const onChatCleared = useCallback(() => {\n    setShouldClearChat(false);\n    setCurrentMessages([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.partselect.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"PartSelect Logo\",\n          className: \"logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'English' ? 'active' : '',\n          onClick: () => toggleLanguage('English'),\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'Spanish' ? 'active' : '',\n          onClick: () => toggleLanguage('Spanish'),\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChatStorage, {\n        chats: chats,\n        onSelectChat: handleSelectChat,\n        onNewChat: handleNewChat,\n        language: language,\n        selectedChat: selectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n        partData: partDataState,\n        onProductSelect: handleProductSelect,\n        selectedChat: selectedChat,\n        onMessagesUpdate: handleMessagesUpdate,\n        language: language,\n        shouldClear: shouldClearChat,\n        onChatCleared: onChatCleared\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-sidebar\",\n        children: selectedProducts.length > 0 ? selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product,\n          language: language\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: language === 'English' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Generated product items with purchase information will appear here!\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Los art\\xEDculos de producto generados con informaci\\xF3n de compra aparecer\\xE1n aqu\\xED!\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"chIhlbtlCtCO/YZa6ZWALjjv1jg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChatStorage","ChatWindow","ProductCard","logo","partData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","selectedChat","setSelectedChat","language","setLanguage","partDataState","setPartData","selectedProducts","setSelectedProducts","shouldClearChat","setShouldClearChat","currentMessages","setCurrentMessages","console","log","handleNewChat","length","_currentMessages$","firstMessage","text","chatName","substring","Date","toLocaleDateString","newChatEntry","title","messages","createdAt","toISOString","prevChats","handleSelectChat","chat","setTimeout","handleProductSelect","products","toggleLanguage","lang","handleMessagesUpdate","updatedMessages","updatedChat","prev","map","onChatCleared","className","children","href","target","rel","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelectChat","onNewChat","onProductSelect","onMessagesUpdate","shouldClear","product","index","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png';\nimport partData from './partData.json'; \nimport './App.css';\n\nconst App = () => {\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partDataState, setPartData] = useState({});\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [shouldClearChat, setShouldClearChat] = useState(false);\n  const [currentMessages, setCurrentMessages] = useState([]);\n\n  useEffect(() => {\n    console.log('Loaded partData:', partData);\n    setPartData(partData);\n  }, []);\n\n  const handleNewChat = useCallback(() => {\n    if (currentMessages.length > 0) {\n      const firstMessage = currentMessages[0]?.text || '';\n      const chatName = firstMessage.length > 0 \n        ? firstMessage.substring(0, 20) + (firstMessage.length > 20 ? '...' : '')\n        : `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: [...currentMessages],\n        createdAt: new Date().toISOString(),\n      };\n      setChats(prevChats => [...prevChats, newChatEntry]);\n    }\n    \n    setSelectedChat(null);\n    setSelectedProducts([]);\n    setShouldClearChat(true);\n  }, [currentMessages]);\n\n  const handleSelectChat = useCallback((chat) => {\n    setShouldClearChat(true); // Clear the window first\n    setTimeout(() => { // Small delay to ensure clearing happens before loading\n      setSelectedChat(chat);\n      setSelectedProducts([]);\n      setCurrentMessages(chat?.messages || []);\n      setShouldClearChat(false);\n    }, 0);\n  }, []);\n\n  const handleProductSelect = useCallback((products) => {\n    setSelectedProducts(products);\n  }, []);\n\n  const toggleLanguage = useCallback((lang) => {\n    setLanguage(lang);\n  }, []);\n\n  const handleMessagesUpdate = useCallback((updatedMessages) => {\n    setCurrentMessages(updatedMessages);\n    if (selectedChat) {\n      const updatedChat = { \n        ...selectedChat, \n        messages: [...updatedMessages]\n      };\n      setSelectedChat(updatedChat);\n      setChats(prev => prev.map(chat => \n        chat.createdAt === selectedChat.createdAt ? updatedChat : { ...chat }\n      ));\n    }\n  }, [selectedChat]);\n\n  const onChatCleared = useCallback(() => {\n    setShouldClearChat(false);\n    setCurrentMessages([]);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"top-bar\">\n        <a href=\"https://www.partselect.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"logo\">\n          <img src={logo} alt=\"PartSelect Logo\" className=\"logo-image\" />\n        </a>\n        <div className=\"language-toggle\">\n          <button\n            className={language === 'English' ? 'active' : ''}\n            onClick={() => toggleLanguage('English')}\n          >\n            English\n          </button>\n          <button\n            className={language === 'Spanish' ? 'active' : ''}\n            onClick={() => toggleLanguage('Spanish')}\n          >\n            Spanish\n          </button>\n        </div>\n      </div>\n      <div className=\"main-content\">\n        <ChatStorage\n          chats={chats}\n          onSelectChat={handleSelectChat}\n          onNewChat={handleNewChat}\n          language={language}\n          selectedChat={selectedChat}\n        />\n        <ChatWindow\n          partData={partDataState}\n          onProductSelect={handleProductSelect}\n          selectedChat={selectedChat}\n          onMessagesUpdate={handleMessagesUpdate}\n          language={language}\n          shouldClear={shouldClearChat}\n          onChatCleared={onChatCleared}\n        />\n        <div className=\"product-sidebar\">\n          {selectedProducts.length > 0 ? (\n            selectedProducts.map((product, index) => (\n              <ProductCard key={index} product={product} language={language} />\n            ))\n          ) : (\n            <div className=\"placeholder\">\n              {language === 'English' ? (\n                <>Generated product items with purchase information will appear here!</>\n              ) : (\n                <>Los artículos de producto generados con información de compra aparecerán aquí!</>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}