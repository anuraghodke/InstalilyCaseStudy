{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getAIMessage } from '../api/api';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  partData,\n  onProductSelect,\n  selectedChat,\n  onMessagesUpdate\n}) => {\n  _s();\n  const [messages, setMessages] = useState(selectedChat ? selectedChat.messages : []);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (selectedChat) {\n      setMessages(selectedChat.messages);\n    } else {\n      setMessages([]);\n    }\n  }, [selectedChat]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  useEffect(() => {\n    // Update the parent component whenever messages change\n    if (messages.length > 0) {\n      onMessagesUpdate(messages);\n    }\n  }, [messages, onMessagesUpdate]);\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add the user's message to the conversation\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      role: 'user',\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n\n    // Debug: Log the raw input\n    console.log('Raw user input:', input);\n\n    // Extract part numbers from the message (e.g., PS12364199, PS-12364199, PS 12364199), case-insensitive\n    const partNumberRegex = /PS-?\\s?\\d+/gi;\n    const partNumbers = input.match(partNumberRegex) || [];\n    console.log('Extracted part numbers:', partNumbers);\n\n    // Debug: Log the partData object and its keys\n    console.log('partData:', partData);\n    console.log('partData keys:', Object.keys(partData));\n\n    // Check if any extracted part numbers exist in partData\n    let localPart = null;\n    let validPartNumber = null;\n    if (partNumbers.length > 0) {\n      const normalizedPartNumbers = partNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n      validPartNumber = normalizedPartNumbers.find(pn => partData[pn]);\n      if (validPartNumber) {\n        localPart = partData[validPartNumber];\n        console.log('Found part in local partData:', localPart);\n      } else {\n        console.log('No matching part found in local partData');\n      }\n    }\n\n    // If a part is found in local partData, use it; otherwise, make an API call\n    if (localPart) {\n      const botMessage = {\n        text: 'Here are the parts I found:',\n        sender: 'bot',\n        role: 'assistant',\n        content: 'Here are the parts I found:',\n        partNumbers: [validPartNumber]\n      };\n      console.log('Bot message to be added (local data):', botMessage);\n      setMessages(prev => {\n        const newMessages = [...prev, botMessage];\n        console.log('Messages after update (local data):', newMessages);\n        return newMessages;\n      });\n\n      // Update the product card with the local part data\n      console.log('Selected product (local data):', localPart);\n      onProductSelect(localPart);\n    } else {\n      // Make an API call with the conversation history\n      try {\n        // Format the messages for the DeepSeek API\n        const apiMessages = updatedMessages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        }));\n\n        // Call the DeepSeek API\n        const apiResponse = await getAIMessage(apiMessages);\n        console.log('API response:', apiResponse);\n\n        // Extract any part numbers mentioned in the API response\n        const apiPartNumbers = apiResponse.content.match(partNumberRegex) || [];\n        const normalizedApiPartNumbers = apiPartNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n        const validApiPartNumber = normalizedApiPartNumbers.find(pn => partData[pn]);\n        const apiPart = validApiPartNumber ? partData[validApiPartNumber] : null;\n\n        // Create the bot message with the API response\n        const botMessage = {\n          text: apiResponse.content,\n          sender: 'bot',\n          role: 'assistant',\n          content: apiResponse.content,\n          partNumbers: validApiPartNumber ? [validApiPartNumber] : []\n        };\n        setMessages(prev => {\n          const newMessages = [...prev, botMessage];\n          console.log('Messages after update (API data):', newMessages);\n          return newMessages;\n        });\n\n        // If the API response includes a valid part number from partData, update the product card\n        if (apiPart) {\n          console.log('Selected product (API data):', apiPart);\n          onProductSelect(apiPart);\n        }\n      } catch (error) {\n        console.error('Error fetching response from API:', error);\n        const botMessage = {\n          text: 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n          sender: 'bot',\n          role: 'assistant',\n          content: 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.'\n        };\n        setMessages(prev => {\n          const newMessages = [...prev, botMessage];\n          console.log('Messages after update (API error):', newMessages);\n          return newMessages;\n        });\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sparkles\",\n          children: \"\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ask our Bot anything\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [message.text, message.partNumbers && message.partNumbers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"part-numbers\",\n            children: message.partNumbers.map((partNumber, idx) => {\n              const product = partData[partNumber];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-link\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onProductSelect(product),\n                  children: product ? product.name : partNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 27\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"order-support-btn\",\n        children: \"\\u2728 Order Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"My next question goes here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"Zw3T9JbGp/DEz4Z1yWiIydHLOpc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getAIMessage","jsxDEV","_jsxDEV","ChatWindow","partData","onProductSelect","selectedChat","onMessagesUpdate","_s","messages","setMessages","input","setInput","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","length","handleSendMessage","trim","userMessage","text","sender","role","content","updatedMessages","console","log","partNumberRegex","partNumbers","match","Object","keys","localPart","validPartNumber","normalizedPartNumbers","map","pn","replace","toUpperCase","find","botMessage","prev","newMessages","apiMessages","msg","apiResponse","apiPartNumbers","normalizedApiPartNumbers","validApiPartNumber","apiPart","error","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","index","partNumber","idx","product","onClick","name","ref","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { getAIMessage } from '../api/api'; \nimport './ChatWindow.css';\n\nconst ChatWindow = ({ partData, onProductSelect, selectedChat, onMessagesUpdate }) => {\n  const [messages, setMessages] = useState(selectedChat ? selectedChat.messages : []);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (selectedChat) {\n      setMessages(selectedChat.messages);\n    } else {\n      setMessages([]);\n    }\n  }, [selectedChat]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  useEffect(() => {\n    // Update the parent component whenever messages change\n    if (messages.length > 0) {\n      onMessagesUpdate(messages);\n    }\n  }, [messages, onMessagesUpdate]);\n\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add the user's message to the conversation\n    const userMessage = { text: input, sender: 'user', role: 'user', content: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n\n    // Debug: Log the raw input\n    console.log('Raw user input:', input);\n\n    // Extract part numbers from the message (e.g., PS12364199, PS-12364199, PS 12364199), case-insensitive\n    const partNumberRegex = /PS-?\\s?\\d+/gi;\n    const partNumbers = input.match(partNumberRegex) || [];\n    console.log('Extracted part numbers:', partNumbers);\n\n    // Debug: Log the partData object and its keys\n    console.log('partData:', partData);\n    console.log('partData keys:', Object.keys(partData));\n\n    // Check if any extracted part numbers exist in partData\n    let localPart = null;\n    let validPartNumber = null;\n    if (partNumbers.length > 0) {\n      const normalizedPartNumbers = partNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n      validPartNumber = normalizedPartNumbers.find(pn => partData[pn]);\n      if (validPartNumber) {\n        localPart = partData[validPartNumber];\n        console.log('Found part in local partData:', localPart);\n      } else {\n        console.log('No matching part found in local partData');\n      }\n    }\n\n    // If a part is found in local partData, use it; otherwise, make an API call\n    if (localPart) {\n      const botMessage = {\n        text: 'Here are the parts I found:',\n        sender: 'bot',\n        role: 'assistant',\n        content: 'Here are the parts I found:',\n        partNumbers: [validPartNumber],\n      };\n      console.log('Bot message to be added (local data):', botMessage);\n      setMessages(prev => {\n        const newMessages = [...prev, botMessage];\n        console.log('Messages after update (local data):', newMessages);\n        return newMessages;\n      });\n\n      // Update the product card with the local part data\n      console.log('Selected product (local data):', localPart);\n      onProductSelect(localPart);\n    } else {\n      // Make an API call with the conversation history\n      try {\n        // Format the messages for the DeepSeek API\n        const apiMessages = updatedMessages.map(msg => ({\n          role: msg.role,\n          content: msg.content,\n        }));\n\n        // Call the DeepSeek API\n        const apiResponse = await getAIMessage(apiMessages);\n        console.log('API response:', apiResponse);\n\n        // Extract any part numbers mentioned in the API response\n        const apiPartNumbers = apiResponse.content.match(partNumberRegex) || [];\n        const normalizedApiPartNumbers = apiPartNumbers.map(pn => pn.replace(/[-\\s]/g, '').trim().toUpperCase());\n        const validApiPartNumber = normalizedApiPartNumbers.find(pn => partData[pn]);\n        const apiPart = validApiPartNumber ? partData[validApiPartNumber] : null;\n\n        // Create the bot message with the API response\n        const botMessage = {\n          text: apiResponse.content,\n          sender: 'bot',\n          role: 'assistant',\n          content: apiResponse.content,\n          partNumbers: validApiPartNumber ? [validApiPartNumber] : [],\n        };\n        setMessages(prev => {\n          const newMessages = [...prev, botMessage];\n          console.log('Messages after update (API data):', newMessages);\n          return newMessages;\n        });\n\n        // If the API response includes a valid part number from partData, update the product card\n        if (apiPart) {\n          console.log('Selected product (API data):', apiPart);\n          onProductSelect(apiPart);\n        }\n      } catch (error) {\n        console.error('Error fetching response from API:', error);\n        const botMessage = {\n          text: 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n          sender: 'bot',\n          role: 'assistant',\n          content: 'An error occurred while fetching the response. Please try again or contact support at ' + (partData[\"Support Phone Number\"] || '1-888-738-4871') + '.',\n        };\n        setMessages(prev => {\n          const newMessages = [...prev, botMessage];\n          console.log('Messages after update (API error):', newMessages);\n          return newMessages;\n        });\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-messages\">\n        {messages.length === 0 ? (\n          <div className=\"welcome-message\">\n            <div className=\"sparkles\">✨</div>\n            <h2>Ask our Bot anything</h2>\n          </div>\n        ) : (\n          messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <div className=\"message-content\">\n                {message.text}\n                {message.partNumbers && message.partNumbers.length > 0 && (\n                  <div className=\"part-numbers\">\n                    {message.partNumbers.map((partNumber, idx) => {\n                      const product = partData[partNumber];\n                      return (\n                        <div key={idx} className=\"product-link\">\n                          <button onClick={() => onProductSelect(product)}>\n                            {product ? product.name : partNumber}\n                          </button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"chat-input\">\n        <button className=\"order-support-btn\">✨ Order Support</button>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"My next question goes here\"\n        />\n        <button onClick={handleSendMessage}>➤</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}