{"ast":null,"code":"export const getAIMessage = async userQuery => {\n  const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY;\n  try {\n    var _data$choices, _data$choices$, _data$choices$$messag;\n    const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: \"deepseek-chat\",\n        messages: [{\n          role: \"system\",\n          content: `You are a helpful assistant for the PartSelect website. You answer ONLY questions related to refrigerator and dishwasher parts. You can help users:\n            - Find compatible parts\n            - Answer installation questions\n            - Troubleshoot common issues\n            - Help with order support\n\n            If the user asks anything outside this scope, politely decline.`\n        }, {\n          role: \"user\",\n          content: userQuery\n        }],\n        temperature: 0.7,\n        max_tokens: 500\n      })\n    });\n    console.log(\"DeepSeek response status:\", response.status);\n    const data = await response.json();\n    console.log(\"DeepSeek response body:\", data);\n    const message = {\n      role: \"assistant\",\n      content: ((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"No valid response received.\"\n    };\n    return message;\n  } catch (error) {\n    console.error(\"‚ùå DeepSeek API error:\", error);\n    console.log(\"üîç API Key loaded:\", apiKey);\n    console.log(\"üì® User query:\", userQuery);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the assistant right now.\"\n    };\n  }\n};","map":{"version":3,"names":["getAIMessage","userQuery","apiKey","process","env","REACT_APP_DEEPSEEK_API_KEY","_data$choices","_data$choices$","_data$choices$$messag","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","temperature","max_tokens","console","log","status","data","json","message","choices","error"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/api/api.js"],"sourcesContent":["export const getAIMessage = async (userQuery) => {\n  const apiKey = process.env.REACT_APP_DEEPSEEK_API_KEY;\n\n  try {\n    const response = await fetch(\"https://api.deepseek.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`,\n      },\n      body: JSON.stringify({\n        model: \"deepseek-chat\",\n        messages: [\n          {\n            role: \"system\",\n            content: `You are a helpful assistant for the PartSelect website. You answer ONLY questions related to refrigerator and dishwasher parts. You can help users:\n            - Find compatible parts\n            - Answer installation questions\n            - Troubleshoot common issues\n            - Help with order support\n\n            If the user asks anything outside this scope, politely decline.`,\n          },\n          { role: \"user\", content: userQuery },\n        ],\n        temperature: 0.7,\n        max_tokens: 500,\n      }),\n    });\n\n    console.log(\"DeepSeek response status:\", response.status);\n\n    const data = await response.json();\n    console.log(\"DeepSeek response body:\", data);\n\n    const message = {\n      role: \"assistant\",\n      content: data.choices?.[0]?.message?.content || \"No valid response received.\",\n    };\n\n    return message;\n  } catch (error) {\n    console.error(\"‚ùå DeepSeek API error:\", error);\n    console.log(\"üîç API Key loaded:\", apiKey);\n    console.log(\"üì® User query:\", userQuery);\n\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the assistant right now.\",\n    };\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAErD,IAAI;IAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,qBAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;MAC3EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUV,MAAM;MACnC,CAAC;MACDW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,CACR;UACEC,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;QACU,CAAC,EACD;UAAED,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAElB;QAAU,CAAC,CACrC;QACDmB,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;MACd,CAAC;IACH,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEd,QAAQ,CAACe,MAAM,CAAC;IAEzD,MAAMC,IAAI,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;IAClCJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,IAAI,CAAC;IAE5C,MAAME,OAAO,GAAG;MACdT,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE,EAAAb,aAAA,GAAAmB,IAAI,CAACG,OAAO,cAAAtB,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,wBAAAC,qBAAA,GAAjBD,cAAA,CAAmBoB,OAAO,cAAAnB,qBAAA,uBAA1BA,qBAAA,CAA4BW,OAAO,KAAI;IAClD,CAAC;IAED,OAAOQ,OAAO;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAErB,MAAM,CAAC;IACzCoB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEtB,SAAS,CAAC;IAExC,OAAO;MACLiB,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}