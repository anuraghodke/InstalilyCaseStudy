{"ast":null,"code":"var _jsxFileName = \"/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png';\nimport partData from './partData.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partDataState, setPartData] = useState({});\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  useEffect(() => {\n    console.log('Loaded partData:', partData);\n    setPartData(partData);\n  }, []);\n  const handleNewChat = useCallback(() => {\n    var _selectedChat$message;\n    if ((selectedChat === null || selectedChat === void 0 ? void 0 : (_selectedChat$message = selectedChat.messages) === null || _selectedChat$message === void 0 ? void 0 : _selectedChat$message.length) > 0) {\n      var _selectedChat$message2;\n      const firstMessage = ((_selectedChat$message2 = selectedChat.messages[0]) === null || _selectedChat$message2 === void 0 ? void 0 : _selectedChat$message2.text) || '';\n      const chatName = firstMessage.length > 0 ? firstMessage.substring(0, 20) + (firstMessage.length > 20 ? '...' : '') : `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: [...selectedChat.messages],\n        // Ensure fresh copy\n        createdAt: selectedChat.createdAt\n      };\n      setChats(prevChats => {\n        const updatedChats = [...prevChats, newChatEntry];\n        return updatedChats;\n      });\n    }\n    const newChat = {\n      title: language === 'English' ? 'New Chat' : 'Nueva Conversación',\n      messages: [],\n      createdAt: new Date().toISOString()\n    };\n    setSelectedChat(newChat); // This should trigger ChatWindow to clear\n    setSelectedProducts([]);\n  }, [selectedChat, language]);\n  const handleSelectChat = useCallback(chat => {\n    setSelectedChat(chat);\n    setSelectedProducts([]);\n  }, []);\n  const handleProductSelect = useCallback(products => {\n    setSelectedProducts(products);\n  }, []);\n  const toggleLanguage = useCallback(lang => {\n    setLanguage(lang);\n  }, []);\n  const handleMessagesUpdate = useCallback(updatedMessages => {\n    if (selectedChat) {\n      const updatedChat = {\n        ...selectedChat,\n        messages: [...updatedMessages] // Fresh copy to avoid reference issues\n      };\n      setSelectedChat(updatedChat);\n      // Only update chats if this chat exists in the history\n      setChats(prev => prev.map(chat => chat.createdAt === selectedChat.createdAt ? updatedChat : {\n        ...chat\n      }));\n    }\n  }, [selectedChat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.partselect.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"PartSelect Logo\",\n          className: \"logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'English' ? 'active' : '',\n          onClick: () => toggleLanguage('English'),\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === 'Spanish' ? 'active' : '',\n          onClick: () => toggleLanguage('Spanish'),\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ChatStorage, {\n        chats: chats,\n        onSelectChat: handleSelectChat,\n        onNewChat: handleNewChat,\n        language: language,\n        selectedChat: selectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n        partData: partDataState,\n        onProductSelect: handleProductSelect,\n        selectedChat: selectedChat,\n        onMessagesUpdate: handleMessagesUpdate,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-sidebar\",\n        children: selectedProducts.length > 0 ? selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product,\n          language: language\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: language === 'English' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Generated product items with purchase information will appear here!\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Los art\\xEDculos de producto generados con informaci\\xF3n de compra aparecer\\xE1n aqu\\xED!\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hEYAuShI5MNoTZaS0roDLFqEtDo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ChatStorage","ChatWindow","ProductCard","logo","partData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","selectedChat","setSelectedChat","language","setLanguage","partDataState","setPartData","selectedProducts","setSelectedProducts","console","log","handleNewChat","_selectedChat$message","messages","length","_selectedChat$message2","firstMessage","text","chatName","substring","Date","toLocaleDateString","newChatEntry","title","createdAt","prevChats","updatedChats","newChat","toISOString","handleSelectChat","chat","handleProductSelect","products","toggleLanguage","lang","handleMessagesUpdate","updatedMessages","updatedChat","prev","map","className","children","href","target","rel","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSelectChat","onNewChat","onProductSelect","onMessagesUpdate","product","index","_c","$RefreshReg$"],"sources":["/Users/anuraghodke/Documents/Job Apps/Instalily Inc./case-study/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ChatStorage from './components/ChatStorage';\nimport ChatWindow from './components/ChatWindow';\nimport ProductCard from './components/ProductCard';\nimport logo from './logo.png';\nimport partData from './partData.json'; \nimport './App.css';\n\nconst App = () => {\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [language, setLanguage] = useState('English');\n  const [partDataState, setPartData] = useState({});\n  const [selectedProducts, setSelectedProducts] = useState([]);\n\n  useEffect(() => {\n    console.log('Loaded partData:', partData);\n    setPartData(partData);\n  }, []);\n\n  const handleNewChat = useCallback(() => {\n    if (selectedChat?.messages?.length > 0) {\n      const firstMessage = selectedChat.messages[0]?.text || '';\n      const chatName = firstMessage.length > 0 \n        ? firstMessage.substring(0, 20) + (firstMessage.length > 20 ? '...' : '')\n        : `Chat ${new Date().toLocaleDateString()}`;\n      const newChatEntry = {\n        title: chatName,\n        messages: [...selectedChat.messages], // Ensure fresh copy\n        createdAt: selectedChat.createdAt,\n      };\n      setChats(prevChats => {\n        const updatedChats = [...prevChats, newChatEntry];\n        return updatedChats;\n      });\n    }\n\n    const newChat = {\n      title: language === 'English' ? 'New Chat' : 'Nueva Conversación',\n      messages: [],\n      createdAt: new Date().toISOString(),\n    };\n    \n    setSelectedChat(newChat); // This should trigger ChatWindow to clear\n    setSelectedProducts([]);\n  }, [selectedChat, language]);\n\n  const handleSelectChat = useCallback((chat) => {\n    setSelectedChat(chat);\n    setSelectedProducts([]);\n  }, []);\n\n  const handleProductSelect = useCallback((products) => {\n    setSelectedProducts(products);\n  }, []);\n\n  const toggleLanguage = useCallback((lang) => {\n    setLanguage(lang);\n  }, []);\n\n  const handleMessagesUpdate = useCallback((updatedMessages) => {\n    if (selectedChat) {\n      const updatedChat = { \n        ...selectedChat, \n        messages: [...updatedMessages] // Fresh copy to avoid reference issues\n      };\n      setSelectedChat(updatedChat);\n      // Only update chats if this chat exists in the history\n      setChats(prev => prev.map(chat => \n        chat.createdAt === selectedChat.createdAt ? updatedChat : { ...chat }\n      ));\n    }\n  }, [selectedChat]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"top-bar\">\n        <a href=\"https://www.partselect.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"logo\">\n          <img src={logo} alt=\"PartSelect Logo\" className=\"logo-image\" />\n        </a>\n        <div className=\"language-toggle\">\n          <button\n            className={language === 'English' ? 'active' : ''}\n            onClick={() => toggleLanguage('English')}\n          >\n            English\n          </button>\n          <button\n            className={language === 'Spanish' ? 'active' : ''}\n            onClick={() => toggleLanguage('Spanish')}\n          >\n            Spanish\n          </button>\n        </div>\n      </div>\n      <div className=\"main-content\">\n        <ChatStorage\n          chats={chats}\n          onSelectChat={handleSelectChat}\n          onNewChat={handleNewChat}\n          language={language}\n          selectedChat={selectedChat}\n        />\n        <ChatWindow\n          partData={partDataState}\n          onProductSelect={handleProductSelect}\n          selectedChat={selectedChat}\n          onMessagesUpdate={handleMessagesUpdate}\n          language={language}\n        />\n        <div className=\"product-sidebar\">\n          {selectedProducts.length > 0 ? (\n            selectedProducts.map((product, index) => (\n              <ProductCard key={index} product={product} language={language} />\n            ))\n          ) : (\n            <div className=\"placeholder\">\n              {language === 'English' ? (\n                <>Generated product items with purchase information will appear here!</>\n              ) : (\n                <>Los artículos de producto generados con información de compra aparecerán aquí!</>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}